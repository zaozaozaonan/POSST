#'
#' @return The Neighborhood score ranking plot.
#' @export
#'
#' @examples neighborhood_ranking_plot <- function(st = stobj,niche = 'niche',neighborhood_score = 'neigh_score',col = c('niche1' = '#f60000','niche2' = '#1000ff',...),dot.size.range = c(2,8),ylim = c(0,6),label.size = 2.5,title = 'Neighborhood score ranking',title.size = 12)
#'
#'
neighborhood_ranking_plot <- function(st = stobj,
niche = 'niche',
split.by = NULL,
split.scales = 'free',
nrow = 1,
ncol = length(unique(st[split.by])),
neighborhood_score = 'neigh_score',
col = unlist(mapply(brewer.pal,brewer.pal.info[brewer.pal.info$category == 'qual',]$maxcolors,rownames(brewer.pal.info[brewer.pal.info$category == 'qual',]))),
dot.size.range = c(2,8),
ylim = c(0,6),
label.size = 2.5,
title = 'Neighborhood score ranking',
title.size = 12){
t_all <- st@meta.data
t_all$niche <- t_all[[niche]]
t_all$neighborhood_score <- t_all[[neighborhood_score]]
t_all <- t_all %>%
filter(total_neighbor_count == 6) %>%
group_by(niche) %>%
mutate(sum=1)%>%
summarise(sum=sum(sum),
mean_neighborhood_score=mean(neighborhood_score)) %>%
ungroup()
t_all <- t_all[order(t_all$mean_neighborhood_score,decreasing = T),]
t_all$niche <- factor(t_all$niche,levels = unique(t_all$niche))
midp <- round(nrow(t_all))/2
t_all[1:midp,'toplab'] <- t_all[1:midp,'niche']
t_all[round(midp+1):nrow(t_all),'botlab'] <- t_all[round(midp+1):nrow(t_all),'niche']
plot <- ggplot(data = t_all,mapping = aes(x = niche, y = mean_neighborhood_score,size = sum,color = niche))+
geom_point()+
geom_line(aes(group= 1),size = 1,color = 'black')+
geom_text(aes(label = toplab), size = label.size, hjust = 0, angle = 45,
position = position_nudge(x = 0.1, y = 0.02),color = 'black')+
geom_text(aes(label = botlab), size = label.size, hjust = 1, angle = 45,
position = position_nudge(x = -0.1, y = -0.02),color = 'black')+
labs(x = '',y = 'Mean neighborhood score',size = 'Spots number',title = title)+
ylim(ylim)+
scale_color_manual(values = col)+
scale_size_continuous(range = dot.size.range)+
theme_bw()+
theme(panel.grid = element_blank())+
theme(axis.ticks.x = element_blank(), axis.text.x = element_blank())+
theme(plot.title = element_text(hjust = 0.5,size = title.size))+
guides(color = 'none')
if (is.null(split.by)){
plot <- plot
}else{
t_all <- st@meta.data
t_all$niche <- t_all[[niche]]
t_all$neighborhood_score <- t_all[[neighborhood_score]]
t_all$split.by <- t_all[[split.by]]
t_all <- t_all %>%
filter(total_neighbor_count == 6) %>%
group_by(niche,split.by) %>%
mutate(sum=1)%>%
summarise(sum=sum(sum),
mean_neighborhood_score=mean(neighborhood_score)) %>%
ungroup()
t_all <- t_all[order(t_all$mean_neighborhood_score,decreasing = T),]
t_all$niche <- factor(t_all$niche,levels = unique(t_all$niche))
midp <- round(nrow(t_all))/2
t_all[1:midp,'toplab'] <- t_all[1:midp,'niche']
t_all[round(midp+1):nrow(t_all),'botlab'] <- t_all[round(midp+1):nrow(t_all),'niche']
plot <- ggplot(data = t_all,mapping = aes(x = niche, y = mean_neighborhood_score,size = sum,color = niche))+
geom_point()+
geom_line(aes(group= 1),size = 1,color = 'black')+
geom_text(aes(label = toplab), size = label.size, hjust = 0, angle = 45,
position = position_nudge(x = 0.1, y = 0.02),color = 'black')+
geom_text(aes(label = botlab), size = label.size, hjust = 1, angle = 45,
position = position_nudge(x = -0.1, y = -0.02),color = 'black')+
labs(x = '',y = 'Mean neighborhood score',size = 'Spots number',title = title)+
ylim(ylim)+
#scale_color_manual(values = col)+
scale_size_continuous(range = dot.size.range)+
theme_bw()+
theme(panel.grid = element_blank())+
theme(axis.ticks.x = element_blank(), axis.text.x = element_blank())+
theme(plot.title = element_text(hjust = 0.5,size = title.size))+
guides(color = 'none')+
facet_wrap(~split.by,scales = split.scales, nrow = nrow, ncol = ncol);plot
}
return(plot)
}
plot <- neighborhood_ranking_plot(st = ob,
niche = 'Spatial_snn_res.1',labelsize = 2.5,
ylim = c(2,3),dotsize = c(2,8),titlesize = 12);plot
plot <- neighborhood_ranking_plot(st = ob,
niche = 'Spatial_snn_res.1',label.size = 2.5,
ylim = c(2,3),dot.size = c(2,8),title.size = 12);plot
ob <- st
plot <- neighborhood_ranking_plot(st = ob,split.by = 'nfgroup',
niche = 'Spatial_snn_res.1',label.size = 2.5,
ylim = c(2,3),dot.size = c(2,8),title.size = 12);plot
#' @param label.size Text size of labels.
#' @param title Title of the plot.
#' @param title.size Text size of the title.
#'
#' @return The Neighborhood score ranking plot.
#' @export
#'
#' @examples neighborhood_ranking_plot <- function(st = stobj,niche = 'niche',neighborhood_score = 'neigh_score',col = c('niche1' = '#f60000','niche2' = '#1000ff',...),dot.size.range = c(2,8),ylim = c(0,6),label.size = 2.5,title = 'Neighborhood score ranking',title.size = 12)
#'
#'
neighborhood_ranking_plot <- function(st = stobj,
niche = 'niche',
split.by = NULL,
split.scales = 'free',
nrow = 1,
ncol = length(unique(st[split.by])),
neighborhood_score = 'neigh_score',
col = unlist(mapply(brewer.pal,brewer.pal.info[brewer.pal.info$category == 'qual',]$maxcolors,rownames(brewer.pal.info[brewer.pal.info$category == 'qual',]))),
dot.size.range = c(2,8),
ylim = c(0,6),
label.size = 2.5,
title = 'Neighborhood score ranking',
title.size = 12){
t_all <- st@meta.data
t_all$niche <- t_all[[niche]]
t_all$neighborhood_score <- t_all[[neighborhood_score]]
t_all <- t_all %>%
filter(total_neighbor_count == 6) %>%
group_by(niche) %>%
mutate(sum=1)%>%
summarise(sum=sum(sum),
mean_neighborhood_score=mean(neighborhood_score)) %>%
ungroup()
t_all <- t_all[order(t_all$mean_neighborhood_score,decreasing = T),]
t_all$niche <- factor(t_all$niche,levels = unique(t_all$niche))
midp <- round(nrow(t_all))/2
t_all[1:midp,'toplab'] <- t_all[1:midp,'niche']
t_all[round(midp+1):nrow(t_all),'botlab'] <- t_all[round(midp+1):nrow(t_all),'niche']
plot <- ggplot(data = t_all,mapping = aes(x = niche, y = mean_neighborhood_score,size = sum,color = niche))+
geom_point()+
geom_line(aes(group= 1),size = 1,color = 'black')+
geom_text(aes(label = toplab), size = label.size, hjust = 0, angle = 45,
position = position_nudge(x = 0.1, y = 0.02),color = 'black')+
geom_text(aes(label = botlab), size = label.size, hjust = 1, angle = 45,
position = position_nudge(x = -0.1, y = -0.02),color = 'black')+
labs(x = '',y = 'Mean neighborhood score',size = 'Spots number',title = title)+
ylim(ylim)+
scale_color_manual(values = col)+
scale_size_continuous(range = dot.size.range)+
theme_bw()+
theme(panel.grid = element_blank())+
theme(axis.ticks.x = element_blank(), axis.text.x = element_blank())+
theme(plot.title = element_text(hjust = 0.5,size = title.size))+
guides(color = 'none')
if (is.null(split.by)){
plot <- plot
}else{
t_all <- st@meta.data
t_all$niche <- t_all[[niche]]
t_all$neighborhood_score <- t_all[[neighborhood_score]]
t_all$split.by <- t_all[[split.by]]
t_all <- t_all %>%
filter(total_neighbor_count == 6) %>%
group_by(niche,split.by) %>%
mutate(sum=1)%>%
summarise(sum=sum(sum),
mean_neighborhood_score=mean(neighborhood_score)) %>%
ungroup()
t_all <- t_all[order(t_all$mean_neighborhood_score,decreasing = T),]
t_all$niche <- factor(t_all$niche,levels = unique(t_all$niche))
midp <- round(nrow(t_all))/2
t_all[1:midp,'toplab'] <- t_all[1:midp,'niche']
t_all[round(midp+1):nrow(t_all),'botlab'] <- t_all[round(midp+1):nrow(t_all),'niche']
plot <- ggplot(data = t_all,mapping = aes(x = niche, y = mean_neighborhood_score,size = sum,color = niche))+
geom_point()+
geom_line(aes(group= 1),size = 1,color = 'black')+
geom_text(aes(label = toplab), size = label.size, hjust = 0, angle = 45,
position = position_nudge(x = 0.1, y = 0.02),color = 'black')+
geom_text(aes(label = botlab), size = label.size, hjust = 1, angle = 45,
position = position_nudge(x = -0.1, y = -0.02),color = 'black')+
labs(x = '',y = 'Mean neighborhood score',size = 'Spots number',title = title)+
ylim(ylim)+
#scale_color_manual(values = col)+
scale_size_continuous(range = dot.size.range)+
theme_bw()+
theme(panel.grid = element_blank())+
theme(axis.ticks.x = element_blank(), axis.text.x = element_blank())+
theme(plot.title = element_text(hjust = 0.5,size = title.size))+
guides(color = 'none')+
facet_wrap(~split.by,scales = split.scales, nrow = nrow, ncol = ncol)
}
return(plot)
}
ob$nfgroup
plot <- neighborhood_ranking_plot(st = ob,split.by = 'nfgroup',
niche = 'Spatial_snn_res.1',label.size = 2.5,
ylim = c(2,3),dot.size = c(2,8),title.size = 12);plot
t_all <- st@meta.data
t_all$niche <- t_all[[niche]]
t_all$neighborhood_score <- t_all[[neighborhood_score]]
t_all$split.by <- t_all[[split.by]]
t_all <- t_all %>%
filter(total_neighbor_count == 6) %>%
group_by(niche,split.by) %>%
mutate(sum=1)%>%
summarise(sum=sum(sum),
mean_neighborhood_score=mean(neighborhood_score)) %>%
ungroup()
t_all <- t_all[order(t_all$mean_neighborhood_score,decreasing = T),]
t_all$niche <- factor(t_all$niche,levels = unique(t_all$niche))
midp <- round(nrow(t_all))/2
t_all[1:midp,'toplab'] <- t_all[1:midp,'niche']
t_all[round(midp+1):nrow(t_all),'botlab'] <- t_all[round(midp+1):nrow(t_all),'niche']
plot <- ggplot(data = t_all,mapping = aes(x = niche, y = mean_neighborhood_score,size = sum,color = niche))+
geom_point()+
geom_line(aes(group= 1),size = 1,color = 'black')+
geom_text(aes(label = toplab), size = label.size, hjust = 0, angle = 45,
position = position_nudge(x = 0.1, y = 0.02),color = 'black')+
geom_text(aes(label = botlab), size = label.size, hjust = 1, angle = 45,
position = position_nudge(x = -0.1, y = -0.02),color = 'black')+
labs(x = '',y = 'Mean neighborhood score',size = 'Spots number',title = title)+
ylim(ylim)+
#scale_color_manual(values = col)+
scale_size_continuous(range = dot.size.range)+
theme_bw()+
theme(panel.grid = element_blank())+
theme(axis.ticks.x = element_blank(), axis.text.x = element_blank())+
theme(plot.title = element_text(hjust = 0.5,size = title.size))+
guides(color = 'none')+
facet_wrap(~split.by,scales = split.scales, nrow = nrow, ncol = ncol)
plot
length(unique(st$split.by))
#' @param label.size Text size of labels.
#' @param title Title of the plot.
#' @param title.size Text size of the title.
#'
#' @return The Neighborhood score ranking plot.
#' @export
#'
#' @examples neighborhood_ranking_plot <- function(st = stobj,niche = 'niche',neighborhood_score = 'neigh_score',col = c('niche1' = '#f60000','niche2' = '#1000ff',...),dot.size.range = c(2,8),ylim = c(0,6),label.size = 2.5,title = 'Neighborhood score ranking',title.size = 12)
#'
#'
neighborhood_ranking_plot <- function(st = stobj,
niche = 'niche',
split.by = NULL,
split.scales = 'fixed',
nrow = 1,
ncol = length(unique(st$split.by)),
neighborhood_score = 'neigh_score',
col = unlist(mapply(brewer.pal,brewer.pal.info[brewer.pal.info$category == 'qual',]$maxcolors,rownames(brewer.pal.info[brewer.pal.info$category == 'qual',]))),
dot.size.range = c(2,8),
ylim = c(0,6),
label.size = 2.5,
title = 'Neighborhood score ranking',
title.size = 12){
t_all <- st@meta.data
t_all$niche <- t_all[[niche]]
t_all$neighborhood_score <- t_all[[neighborhood_score]]
t_all <- t_all %>%
filter(total_neighbor_count == 6) %>%
group_by(niche) %>%
mutate(sum=1)%>%
summarise(sum=sum(sum),
mean_neighborhood_score=mean(neighborhood_score)) %>%
ungroup()
t_all <- t_all[order(t_all$mean_neighborhood_score,decreasing = T),]
t_all$niche <- factor(t_all$niche,levels = unique(t_all$niche))
midp <- round(nrow(t_all))/2
t_all[1:midp,'toplab'] <- t_all[1:midp,'niche']
t_all[round(midp+1):nrow(t_all),'botlab'] <- t_all[round(midp+1):nrow(t_all),'niche']
plot <- ggplot(data = t_all,mapping = aes(x = niche, y = mean_neighborhood_score,size = sum,color = niche))+
geom_point()+
geom_line(aes(group= 1),size = 1,color = 'black')+
geom_text(aes(label = toplab), size = label.size, hjust = 0, angle = 45,
position = position_nudge(x = 0.1, y = 0.02),color = 'black')+
geom_text(aes(label = botlab), size = label.size, hjust = 1, angle = 45,
position = position_nudge(x = -0.1, y = -0.02),color = 'black')+
labs(x = '',y = 'Mean neighborhood score',size = 'Spots number',title = title)+
ylim(ylim)+
scale_color_manual(values = col)+
scale_size_continuous(range = dot.size.range)+
theme_bw()+
theme(panel.grid = element_blank())+
theme(axis.ticks.x = element_blank(), axis.text.x = element_blank())+
theme(plot.title = element_text(hjust = 0.5,size = title.size))+
guides(color = 'none')
if (is.null(split.by)){
plot <- plot
}else{
t_all <- st@meta.data
t_all$niche <- t_all[[niche]]
t_all$neighborhood_score <- t_all[[neighborhood_score]]
t_all$split.by <- t_all[[split.by]]
t_all <- t_all %>%
filter(total_neighbor_count == 6) %>%
group_by(niche,split.by) %>%
mutate(sum=1)%>%
summarise(sum=sum(sum),
mean_neighborhood_score=mean(neighborhood_score)) %>%
ungroup()
t_all <- t_all[order(t_all$mean_neighborhood_score,decreasing = T),]
t_all$niche <- factor(t_all$niche,levels = unique(t_all$niche))
midp <- round(nrow(t_all))/2
t_all[1:midp,'toplab'] <- t_all[1:midp,'niche']
t_all[round(midp+1):nrow(t_all),'botlab'] <- t_all[round(midp+1):nrow(t_all),'niche']
plot <- ggplot(data = t_all,mapping = aes(x = niche, y = mean_neighborhood_score,size = sum,color = niche))+
geom_point()+
geom_line(aes(group= 1),size = 1,color = 'black')+
geom_text(aes(label = toplab), size = label.size, hjust = 0, angle = 45,
position = position_nudge(x = 0.1, y = 0.02),color = 'black')+
geom_text(aes(label = botlab), size = label.size, hjust = 1, angle = 45,
position = position_nudge(x = -0.1, y = -0.02),color = 'black')+
labs(x = '',y = 'Mean neighborhood score',size = 'Spots number',title = title)+
ylim(ylim)+
#scale_color_manual(values = col)+
scale_size_continuous(range = dot.size.range)+
theme_bw()+
theme(panel.grid = element_blank())+
theme(axis.ticks.x = element_blank(), axis.text.x = element_blank())+
theme(plot.title = element_text(hjust = 0.5,size = title.size))+
guides(color = 'none')+
facet_wrap(~split.by,scales = split.scales, nrow = nrow, ncol = ncol)
}
return(plot)
}
plot <- neighborhood_ranking_plot(st = ob,split.by = 'nfgroup',split.scales =
niche = 'Spatial_snn_res.1',label.size = 2.5,
plot <- neighborhood_ranking_plot(st = ob,split.by = 'nfgroup',
niche = 'Spatial_snn_res.1',label.size = 2.5,
ylim = c(2,3),dot.size = c(2,8),title.size = 12);plot
#' @param label.size Text size of labels.
#' @param title Title of the plot.
#' @param title.size Text size of the title.
#'
#' @return The Neighborhood score ranking plot.
#' @export
#'
#' @examples neighborhood_ranking_plot <- function(st = stobj,niche = 'niche',neighborhood_score = 'neigh_score',col = c('niche1' = '#f60000','niche2' = '#1000ff',...),dot.size.range = c(2,8),ylim = c(0,6),label.size = 2.5,title = 'Neighborhood score ranking',title.size = 12)
#'
#'
neighborhood_ranking_plot <- function(st = stobj,
niche = 'niche',
split.by = NULL,
split.scales = 'fixed',
nrow = 1,
ncol = 2,
neighborhood_score = 'neigh_score',
col = unlist(mapply(brewer.pal,brewer.pal.info[brewer.pal.info$category == 'qual',]$maxcolors,rownames(brewer.pal.info[brewer.pal.info$category == 'qual',]))),
dot.size.range = c(2,8),
ylim = c(0,6),
label.size = 2.5,
title = 'Neighborhood score ranking',
title.size = 12){
t_all <- st@meta.data
t_all$niche <- t_all[[niche]]
t_all$neighborhood_score <- t_all[[neighborhood_score]]
t_all <- t_all %>%
filter(total_neighbor_count == 6) %>%
group_by(niche) %>%
mutate(sum=1)%>%
summarise(sum=sum(sum),
mean_neighborhood_score=mean(neighborhood_score)) %>%
ungroup()
t_all <- t_all[order(t_all$mean_neighborhood_score,decreasing = T),]
t_all$niche <- factor(t_all$niche,levels = unique(t_all$niche))
midp <- round(nrow(t_all))/2
t_all[1:midp,'toplab'] <- t_all[1:midp,'niche']
t_all[round(midp+1):nrow(t_all),'botlab'] <- t_all[round(midp+1):nrow(t_all),'niche']
plot <- ggplot(data = t_all,mapping = aes(x = niche, y = mean_neighborhood_score,size = sum,color = niche))+
geom_point()+
geom_line(aes(group= 1),size = 1,color = 'black')+
geom_text(aes(label = toplab), size = label.size, hjust = 0, angle = 45,
position = position_nudge(x = 0.1, y = 0.02),color = 'black')+
geom_text(aes(label = botlab), size = label.size, hjust = 1, angle = 45,
position = position_nudge(x = -0.1, y = -0.02),color = 'black')+
labs(x = '',y = 'Mean neighborhood score',size = 'Spots number',title = title)+
ylim(ylim)+
scale_color_manual(values = col)+
scale_size_continuous(range = dot.size.range)+
theme_bw()+
theme(panel.grid = element_blank())+
theme(axis.ticks.x = element_blank(), axis.text.x = element_blank())+
theme(plot.title = element_text(hjust = 0.5,size = title.size))+
guides(color = 'none')
if (is.null(split.by)){
plot <- plot
}else{
t_all <- st@meta.data
t_all$niche <- t_all[[niche]]
t_all$neighborhood_score <- t_all[[neighborhood_score]]
t_all$split.by <- t_all[[split.by]]
t_all <- t_all %>%
filter(total_neighbor_count == 6) %>%
group_by(niche,split.by) %>%
mutate(sum=1)%>%
summarise(sum=sum(sum),
mean_neighborhood_score=mean(neighborhood_score)) %>%
ungroup()
t_all <- t_all[order(t_all$mean_neighborhood_score,decreasing = T),]
t_all$niche <- factor(t_all$niche,levels = unique(t_all$niche))
midp <- round(nrow(t_all))/2
t_all[1:midp,'toplab'] <- t_all[1:midp,'niche']
t_all[round(midp+1):nrow(t_all),'botlab'] <- t_all[round(midp+1):nrow(t_all),'niche']
plot <- ggplot(data = t_all,mapping = aes(x = niche, y = mean_neighborhood_score,size = sum,color = niche))+
geom_point()+
geom_line(aes(group= 1),size = 1,color = 'black')+
geom_text(aes(label = toplab), size = label.size, hjust = 0, angle = 45,
position = position_nudge(x = 0.1, y = 0.02),color = 'black')+
geom_text(aes(label = botlab), size = label.size, hjust = 1, angle = 45,
position = position_nudge(x = -0.1, y = -0.02),color = 'black')+
labs(x = '',y = 'Mean neighborhood score',size = 'Spots number',title = title)+
ylim(ylim)+
#scale_color_manual(values = col)+
scale_size_continuous(range = dot.size.range)+
theme_bw()+
theme(panel.grid = element_blank())+
theme(axis.ticks.x = element_blank(), axis.text.x = element_blank())+
theme(plot.title = element_text(hjust = 0.5,size = title.size))+
guides(color = 'none')+
facet_wrap(~split.by,scales = split.scales, nrow = nrow, ncol = ncol)
}
return(plot)
}
ob$nfgroup
ob$Spatial_snn_res.1
plot <- neighborhood_ranking_plot(st = ob,split.by = 'nfgroup',
niche = 'Spatial_snn_res.1',label.size = 2.5,
ylim = c(2,3),dot.size = c(2,8),title.size = 12);plot
plot <- neighborhood_ranking_plot(st = ob,split.by = 'nfgroup',split.scales = 'free',
niche = 'Spatial_snn_res.1',label.size = 2.5,
ylim = c(2,3),dot.size = c(2,8),title.size = 12);plot
plot <- neighborhood_ranking_plot(st = ob,split.by = 'nfgroup',split.scales = 'free',
niche = 'Spatial_snn_res.1',label.size = 2.5,
ylim = c(2,3),dot.size = c(2,8),title.size = 12);plot
plot <- neighborhood_ranking_plot(st = ob,split.by = 'nfgroup',split.scales = 'free_x',
niche = 'Spatial_snn_res.1',label.size = 2.5,
ylim = c(2,3),dot.size = c(2,8),title.size = 12);plot
t_all <- st@meta.data
t_all$niche <- t_all[[niche]]
t_all$neighborhood_score <- t_all[[neighborhood_score]]
t_all$split.by <- t_all[[split.by]]
t_all <- t_all %>%
filter(total_neighbor_count == 6) %>%
group_by(niche,split.by) %>%
mutate(sum=1)%>%
summarise(sum=sum(sum),
mean_neighborhood_score=mean(neighborhood_score)) %>%
ungroup()
t_all <- t_all[order(t_all$mean_neighborhood_score,decreasing = T),]
t_all$niche <- factor(t_all$niche,levels = unique(t_all$niche))
midp <- round(nrow(t_all))/2
t_all[1:midp,'toplab'] <- t_all[1:midp,'niche']
t_all[round(midp+1):nrow(t_all),'botlab'] <- t_all[round(midp+1):nrow(t_all),'niche']
plot <- ggplot(data = t_all,mapping = aes(x = niche, y = mean_neighborhood_score,size = sum,color = niche))+
geom_point()+
geom_line(aes(group= 1),size = 1,color = 'black')+
geom_text(aes(label = toplab), size = label.size, hjust = 0, angle = 45,
position = position_nudge(x = 0.1, y = 0.02),color = 'black')+
geom_text(aes(label = botlab), size = label.size, hjust = 1, angle = 45,
position = position_nudge(x = -0.1, y = -0.02),color = 'black')+
labs(x = '',y = 'Mean neighborhood score',size = 'Spots number',title = title)+
ylim(ylim)+
#scale_color_manual(values = col)+
scale_size_continuous(range = dot.size.range)+
theme_bw()+
theme(panel.grid = element_blank())+
theme(axis.ticks.x = element_blank(), axis.text.x = element_blank())+
theme(plot.title = element_text(hjust = 0.5,size = title.size))+
guides(color = 'none')+
facet_wrap(~split.by,scales = split.scales, nrow = nrow, ncol = ncol)
plot <- ggplot(data = t_all,mapping = aes(x = niche, y = mean_neighborhood_score,size = sum,color = niche))+
geom_point()+
geom_line(aes(group= 1),size = 1,color = 'black')+
geom_text(aes(label = toplab), size = label.size, hjust = 0, angle = 45,
position = position_nudge(x = 0.1, y = 0.02),color = 'black')+
geom_text(aes(label = botlab), size = label.size, hjust = 1, angle = 45,
position = position_nudge(x = -0.1, y = -0.02),color = 'black')+
labs(x = '',y = 'Mean neighborhood score',size = 'Spots number',title = title)+
ylim(ylim)+
#scale_color_manual(values = col)+
scale_size_continuous(range = dot.size.range)+
theme_bw()+
theme(panel.grid = element_blank())+
theme(axis.ticks.x = element_blank(), axis.text.x = element_blank())+
theme(plot.title = element_text(hjust = 0.5,size = title.size))+
guides(color = 'none')+
facet_wrap(~split.by,scales = split.scales, nrow = nrow, ncol = ncol);plot
plot <- neighborhood_ranking_plot(st = ob,split.by = 'nfgroup',split.scales = 'free_x',
niche = 'Spatial_snn_res.1',label.size = 2.5,
ylim = c(1,3),dot.size = c(2,8),title.size = 12);plot
devtools::document()
devtools::build()
devtools::document()
devtools::document()
devtools::build()
devtools::document()
devtools::build()
devtools::load_all(".")
devtools::document()
devtools::document()
devtools::build()
seq(1,20,10)
colnames(t_all) <- 'mean_coloc_score_'
library(Seurat)
pheatmap::pheatmap(t_all,main = title,cellwidth = 10,cellheight = 10,angle_col = 315,
color = colorRampPalette(col)(100)),
devtools::document()
devtools::build()
?melt
round(-1.2)
source("D:/datatransfer/2024-09-01-POSST/POSST/R/bd_line_plot.R")
usethis::use_apache_license()
